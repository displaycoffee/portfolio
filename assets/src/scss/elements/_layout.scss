// Use utils and theme variables
@use '../utils/_functions';
@use '../utils/_mixins';
@use '../theme/_theme';

//// FLEX
//// --------------------------------------------------------------------------

.flex-wrap {
	@include mixins.flex-layout;
}

.flex-align-content-center {
	@include mixins.flex-parent(align-content, center);
}

.flex-nowrap {
	@include mixins.flex-layout((flex-flow: row nowrap));
}

.flex-align-items-center {
	@include mixins.flex-parent(align-items, center);
}

.flex-justify-content-center {
	@include mixins.flex-parent(justify-content, center);
}

//// ROWS / COLUMNS
//// --------------------------------------------------------------------------

.row {
	.column {
		min-width: 1px;
	}
}

.row-auto {
	.column {
		@include mixins.flex(0 1 auto);
	}
}

.row-fit {
	.column {		
		@include mixins.flex;
	}
}

.row-wrap {
	@extend .flex-wrap;
}

.row-nowrap {
	@extend .flex-nowrap;
}

.row-align-content-center {
	@extend .flex-align-content-center;
}

.row-align-items-center {
	@extend .flex-align-items-center;
}

.row-justify-content-center {
	@extend .flex-justify-content-center;
}

// Array of spacing values
$row-spacing: (
	theme.$spacing-x1, 
	theme.$spacing-x2, 
	theme.$spacing-x3, 
	theme.$spacing-x4,
	theme.$spacing-x5, 
	theme.$spacing-x6, 
	theme.$spacing-x7, 
	theme.$spacing-x8
);

// Create row spacing styles by looping through $row-spacing
@each $row in $row-spacing {
	$row-class: calc($row / 1px);
	$row-half: calc($row / 2);
	.row-#{$row-class} {
		margin: 0 -#{$row-half} -#{$row} -#{$row-half};
		& > .column {
			padding: 0 $row-half;
			margin: 0 0 $row 0;
		}
	}
}